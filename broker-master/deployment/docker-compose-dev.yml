version: '3.8'

services:
  prometheus:
    image: docker.arvancloud.ir/prom/prometheus
    container_name: prometheus
    networks:
      - broker_net
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"

    volumes:
      - ${PROMETHEUS_PATH}:/etc/prometheus
      - prom_data:/prometheus
    command: 
      - '--config.file=/etc/prometheus/prometheus.yml'
    environment:
      - PROMETHEUS_HOST=${PROMETHEUS_HOST}
      - PROMETHEUS_PORT=${PROMETHEUS_PORT}
      - APPLICATION_HOST=${APPLICATION_HOST}
      - APPLICATION_PROM_PORT=${APPLICATION_PROM_PORT}
    env_file:
      - .env.deploy



  grafana:
    image: docker.arvancloud.ir/grafana/grafana
    container_name: grafana
    networks:
      - broker_net
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    volumes:
      - ${GRAFANA_PATH}:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    env_file:
      - .env.deploy


  jaeger:
    image: docker.arvancloud.ir/jaegertracing/all-in-one
    container_name: jaeger
    networks:
      - broker_net
    ports:
      - "${JAEGER_PORT1}:${JAEGER_PORT1}"
      - "${JAEGER_PORT2}:${JAEGER_PORT2}"
    env_file:
      - .env.deploy


  postgres:
    image: postgres
    container_name: postgres
    networks:
      - broker_net
    environment:
      POSTGRES_DB: ${POSTGRES_DBNAME}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ${POSTGRES_PATH}:/var/lib/postgresql/data
    env_file:
      - .env.deploy

  
  cassandra:
    image: cassandra
    container_name: cassandra
    volumes:
      - ${CASSANDRA1_PATH}:/var/lib/cassandra
    ports:
      - "${CASSANDRA_PORT}:${CASSANDRA_PORT}"
    networks:
      - broker_net
    hostname: ${CASSANDRA_HOSTS}
    environment:
      - CASSANDRA_CLUSTER_NAME=${CASSANDRA_CLUSTER}
      - CASSANDRA_AUTHENTICATOR=PasswordAuthenticator
      - CASSANDRA_AUTHORIZER=CassandraAuthorizer
      - CASSANDRA_USERNAME=${CASSANDRA_USERNAME}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
    env_file:
      - .env.deploy



  envoy:
    image: docker.arvancloud.ir/envoyproxy/envoy:v1.19.1
    container_name: envoy
    ports:
      - "${DOWNSTREAM_PORT}:${DOWNSTREAM_PORT}"
      - "9901:9901"
    volumes:
      - ${ENVOY_PATH}:/etc/envoy/envoy.yaml
    command: ["envoy", "-c", "/etc/envoy/envoy.yaml", "--service-cluster", "envoy"]
    networks:
      - broker_net
    env_file:
      - .env.deploy


  therealbroker:
    build:
      context: ../
      dockerfile: Dockerfile
    container_name: therealbroker
    ports:
      - "${APPLICATION_PORT}:${APPLICATION_PORT}"
    depends_on:
      - prometheus
      - jaeger
      - postgres
      - cassandra
      - envoy
    restart: on-failure
    env_file:
      - .env.deploy
    networks:
      - broker_net

networks:
  broker_net:
    name: broker_net

volumes:
  prom_data: